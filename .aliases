alias cod='cd ~/Desktop/code/'
alias doc='cd ~/Documents/'
alias dot='cd ~/dotfiles/'
alias dsk='cd ~/Desktop/'

function al(){ alias | grep "^$1" }  # List aliases starting with the input string
function alf(){ functions | grep "^$1" }  # List functions starting with the input string
alias alup='
    cd ~/dotfiles/
    source .zshrc
    git add .aliases
    git commit -m ":wrench: Update aliases"
    git push
    1
'

alias b='brew'
alias bi='brew install'
alias bif='brew info'
alias bls='brew list'
alias bui='brew uninstall'
alias bup='
    brew update
    brew upgrade
    brew upgrade --cask --greedy
    brew cleanup
    brew cleanup -s
'

function bind(){ ssh -N -f -L localhost:$2:localhost:$3 $1 }

alias clr='clear'

function copy-to(){ rsync -r $2 $1:$3 }  # $1: user@host; $2: local path; $3: remote path
function copy-from(){ rsync -r $1:$2 $3 }  # $1: user@host; $2: remote path; $3: local path

alias dk='docker'
alias dkapp='open -a "Docker"'
alias dkclean='
  echo "docker stop $(docker ps -a -q)..."; docker stop $(docker ps -a -q)
  echo "docker container prune --force..."; docker container prune --force
  echo "docker volume prune --force..."; docker volume prune --force
  echo "docker image prune --all --force..."; docker image prune --all --force
  echo "docker system prune --all --force..."; docker system prune --all --force
'

alias dkc='docker-compose'
alias dkcup='docker-compose up'

alias duh='du -d 1 -h'
alias dutopg='du -d 1 -g | sort -nr | head'
alias dutopm='du -d 1 -m | sort -nr | head'

alias g='git'
alias ga='git add'
alias gaa='git add --all'
alias gah='git add .'
alias gb='git branch'
alias gbd='git branch -D'  # Force delete a local branch
alias gch='git checkout'
alias gchd='git checkout --'  # Discard local changes
alias gchdh='git checkout -- .'
alias gchm='git checkout main'  # Checkout to main
alias gcl='git clone'
alias gcm='git commit'
alias gcman='git commit --amend --no-edit'
alias gcmanf='git commit --amend --no-edit --no-verify'
alias gcmf='git commit --no-verify'
alias gcmfwip='git commit --no-verify -m ":construction: WIP"'
alias gconf='git config'
alias gconfg='git config --global'
alias gfp='git fetch --prune'  # Remove unused remote branches
alias glg='git lg'
alias glgm='git lg origin..HEAD'  # Show the log since the divergence from origin/main
alias gpl='git pull'
alias gps='git push'
alias gpsf='git push --force'
alias gpst='git push --tags'  # Push all tags
alias gpstd='git push --delete origin'  # Push local tags deletions
alias gpsu='git push -u'  # Push the current local branch to remote & track it
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbm='git rebase origin/main'  # Rebase in interactive mode from the fork with main
alias grbs='git rebase --skip'
alias grs='git reset'  # Reset commits but keep changes in the working tree as not added
alias grsha='git reset --hard'  # Reset commits & changes in the working tree
alias grshal='git reset --hard HEAD~1'  # Reset the last commit & its changes in the working tree
function grshan(){ git reset --hard HEAD~$1 }  # Reset the N last commits & their changes in the working tree
alias grshe='git reset HEAD'  # Make all added changes not added
alias grsl='git reset HEAD~1'  # Reset the last commit but keep its changes in the working tree as not added
function grsn(){ git reset HEAD~$1 }  # Reset the N last commits but keep their changes in the working tree as not added
alias grsso='git reset --soft'  # Reset commits but keep changes in the working tree as added
alias grssol='git reset --soft HEAD~1'  # Reset the last commit but keep its changes in the working tree as added
function grsson(){ git reset --soft HEAD~$1 }  # Reset the N last commits but keep their changes in the working tree as added
alias grv='git revert'
alias gs='git status'
alias gsh='git status .'
alias gst='git stash'  # Stash the uncommited changes
alias gsta='git stash apply'  # Re-apply the last stashed changes (don't clear them)
alias gstclr='git stash clear'
alias gstls='git stash list'
alias gstp='git stash pop'  # Re-apply the last stashed changes & clear them
alias gt='git tag'
alias gtd='git tag -d'  # Delete local tag

function gcmbug(){ git commit -m ":bug: $1" }
function gcmcifix(){ git commit -m ":green_heart: $1" }
function gcmciadd(){ git commit -m ":construction_worker: $1" }
function gcmcomm(){ git commit -m ":bulb: $1" }
function gcmconf(){ git commit -m ":wrench: $1" }
function gcmdead(){ git commit -m ":coffin: $1" }
function gcmdel(){ git commit -m ":fire: $1" }
function gcmdev(){ git commit -m ":technologist: $1" }
function gcmdoc(){ git commit -m ":memo: $1" }
function gcmdown(){ git commit -m ":arrow_down: $1" }
function gcmexp(){ git commit -m ":alembic: $1" }
function gcmfeat(){ git commit -m ":sparkles: $1" }
function gcmfix(){ git commit -m ":adhesive_bandage: $1" }
function gcmformat(){ git commit -m ":art: $1" }
function gcmhotfix(){ git commit -m ":ambulance: $1" }
function gcmignore(){ git commit -m ":see_no_evil: $1" }
function gcmmove(){ git commit -m ":truck: $1" }
function gcmperf(){ git commit -m ":zap: $1" }
function gcmpin(){ git commit -m ":pushpin: $1" }
function gcmrefacto(){ git commit -m ":recycle: $1" }
function gcmstart(){ git commit -m ":tada: $1" }
function gcmtest(){ git commit -m ":white_check_mark: $1" }
function gcmtype(){ git commit -m ":label: $1" }
function gcmtypo(){ git commit -m ":pencil2: $1" }
function gcmup(){ git commit -m ":arrow_up: $1" }
function gcmuser(){ git commit -m ":children_crossing: $1" }
function gcmwip(){ git commit -m ":construction: $1" }

alias jnb='jupyter notebook'

function pc(){ open -na "PyCharm.app" --args "$1" }
alias pcdot='open -na "PyCharm.app" --args ~/dotfiles/'

alias pii='pip install'
alias pils='pip list'
alias pis='pip show'
alias piui='pip uninstall'

alias po='poetry'
alias poa='poetry add'
alias popb='poetry publish'
alias popbb='poetry publish --build'
alias poclr='poetry cache clear --all .'
alias poe='poetry env'
alias poecd='cd ~/Library/Caches/pypoetry/virtualenvs'
alias poeif='poetry env info'
alias poels='poetry env list'
alias poerm='poetry env remove'
alias poepy37='poetry env use python3.7'
alias poepy38='poetry env use python3.8'
alias poepy39='poetry env use python3.9'
alias poi='poetry install'
alias poru='poetry run'
alias porudoc='poetry run mkdocs serve'
alias porujnb='poetry run jupyter notebook'
alias porupte='poetry run pytest'
alias posh='poetry shell'
alias postart='poetry init'
alias poup='poetry update'

alias pcm='pre-commit'
alias pcmi='pre-commit install'  # Install in a repository
alias pcmru='pre-commit run'  # Run on a file
alias pcmrua='pre-commit run --all-files'  # Run on all files
alias pcmui='pre-commit uninstall'  # Uninstall from a repository

alias pte='pytest'
alias ptefast='pytest -m "not slow"'
alias pteslow='pytest -m "slow"'

alias py='python'

alias sc='screen'
alias scls='screen -ls'  # List current sessions

alias src='source'

alias tch='touch'

function vea(){ source "$1/bin/activate" }  # Activate an environemnt
alias veav='source .venv/bin/activate'
alias vec='python3 -m venv'  # Create a venv environment
alias vecv='python3 -m venv .venv'
alias ved='deactivate'  # Deactivate an environment

alias vial='vi ~/dotfiles/.aliases'
alias vialp='vi ~/dotfiles/.aliases_private'
