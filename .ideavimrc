" .ideavimrc is a configuration file for IdeaVim plugin; it uses
" the same commands as the original .vimrc configuration
"
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc
" Parts of the following configuration are taken from here:
" https://amine-elhattami.medium.com/destination-ideavim-day-1-the-basics-793a514af57f
" and here: https://towardsdatascience.com/the-essential-ideavim-remaps-291d4cd3971b

""" General settings

" Show a few lines of context around the cursor; note that this makes the
" text scroll if you mouse-click near the start or end of the window
set scrolloff=5
" Do incremental searching (highlight results as you type)
set incsearch
" Use relative line numbers, except for the one under the cursor
set number
set relativenumber
" Enable copy paste from the system and PyCharm clipboards
set clipboard+=unnamed
set clipboard+=ideaput
" Use PyCharm lines join (with J)
set ideajoin

""" Key mappings
" See the documentation here: https://jb.gg/abva4t

let mapleader = " "

" Specify which of Vim or the IDE should handle the conflicting mappings
sethandler <c-n> i-v:vim n:ide
sethandler <c-r> a:vim
sethandler <TAB> n-v:vim i:ide
sethandler <s-TAB> n-v:vim i:ide

nmap <leader>,e :edit ~/.ideavimrc<CR>
nmap <leader>,r <Action>(IdeaVim.ReloadVimRc.reload)
nmap <leader>,t <Action>(VimFindActionIdAction)

"" Splits management
" Create splits
nmap <leader>! <Action>(MoveTabRight)
nmap <leader>- <Action>(MoveTabDown)
nmap <leader>' <Action>(Unsplit)
" Navigate splits
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nmap <c-m> <Action>(MoveEditorToOppositeTabGroup)

"" Projects management
nmap <leader>c <Action>(ManageRecentProjects)
nmap <leader>q <Action>(CloseProject)
nmap <leader>n <Action>(NextProjectWindow)
nmap <leader>p <Action>(PreviousProjectWindow)

"" Tool windows management
nmap <leader>e <action>(ActivateProjectToolWindow)
nmap <leader>tg <action>(ActivateVersionControlToolWindow)
nmap <leader>ts <action>(ActivateStructureToolWindow)
nmap <leader>tt <action>(ActivateTODOToolWindow)
nmap <leader>tr <action>(ActivateRemoteHostToolWindow)
nmap <leader>td <action>(ActivateDatabaseToolWindow)
nmap <leader>tc <action>(ActivatePythonConsoleToolWindow)
nmap <leader>tn <action>(ActivateNotificationsToolWindow)
nmap <leader>tp <action>(ActivateProblemsViewToolWindow)
nmap <leader>tl <action>(JumpToLastWindow)
nmap <leader>h <action>(HideActiveWindow)
nmap <leader>H <action>(HideAllWindows)

"" Navigation mode mappings
nmap <TAB> <Action>(NextTab)
nmap <s-TAB> <Action>(PreviousTab)
nmap <leader>x <Action>(CloseContent)
nmap <leader>X <Action>(CloseAllEditors)
nmap <leader>fa <Action>(GotoFile)
nmap <leader>fmb <Action>(Tool_External Tools_Black)
nmap <leader>fmi <Action>(Tool_External Tools_isort)
nmap <leader>fmp <Action>(Tool_External Tools_Prettier)
nmap <leader>fmc <Action>(Tool_External Tools_pre-commit)
nmap <leader>fmo <Action>(Tool_External OptimizeImports)
nmap <leader>fmr <Action>(ReformatCode)
nmap <leader>r <Action>(RenameElement)
nmap <leader>z <Action>(ToggleDistractionFreeMode)
nmap gd <Action>(GotoDeclaration)

"" Git-related
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap <leader>rh <Action>(Vcs.RollbackChangedLines)

"" Insert mode mappings
" Move to beginning or end of line
inoremap <C-b> <Home>
inoremap <C-e> <End>
imap <c-SPACE> <Action>(CodeCompletion)
imap <c-n> <Action>(EditorLookupSelectionDown)
imap <c-p> <Action>(EditorLookupSelectionUp)

"" Visual mode mappings
vmap <TAB> <Action>(EditorIndentLineOrSelection)
vmap <s-TAB> <Action>(EditorUnindentSelection)

""" IdeaVim plugins
" See the list of available plugins here: https://jb.gg/ideavim-plugins

" NerdTree-style project view
Plug 'preservim/nerdtree'
" Highlight a region when yanked
Plug 'machakann/vim-highlightedyank'
" Comment stuff out with the `gc` or `gcc` commands
Plug 'tpope/vim-commentary'
" Provide mappings to easily manipulate parentheses, brackets, etc. and their content
Plug 'tpope/vim-surround'
" Provide a simpler way to use motions in vim
" See the documentation of the original plugin here:
" https://github.com/easymotion/vim-easymotion/blob/master/doc/easymotion.txt
Plug 'easymotion/vim-easymotion'
" Disable the default mappings
let g:EasyMotion_do_mapping=0
" Change the leader from <Leader><Leader> to <Leader>
map <Leader> <Plug>(easymotion-prefix)
" Define EasyMotion mappings
nmap s <Plug>(easymotion-s)
vmap s <Plug>(easymotion-s)
map <Leader>w <Plug>(easymotion-wl)
map <Leader>b <Plug>(easymotion-bl)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
